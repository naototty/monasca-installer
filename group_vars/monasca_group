---
# Copyright 2016 FUJITSU LIMITED
# file: group_vars/monasca_group

is_openstack: false

# urls
influxdb_deb_src_url: "{{ world_repo_url }}"
get_pip_download_url: "{{ world_repo_url }}"
# monasca information
monasca_group: monasca
# influxDB
influxdb:
  raft_port: 8086
# influxDB
influx_db_user: "influxdb"
influx_db_group: "influxdb"
influxdb_hostname: "{{ monasca_host }}"
influxdb_bind_address: "{{ influxdb_hostname }}"
# After clustering monasca-persister this variable can be removed
# because location of influxdb will be specified from inventory level
influxdb_url: "http://{{ influxdb_bind_address }}:8086"
influxdb_users:
  mon_api: "{{ influxdb_mon_api_password }}"
  mon_persister: "{{ influxdb_mon_persister_password }}"
influxdb_raft_port: 8085
influxdb_log_dir: "{{ log_dir }}/influxdb"
influxdb_version: 0.9.1-1
influxdb_http_log_enabled: False

kafka_log_topic_max_message_bytes: 1048576

# kafka
kafka_hosts: "{% for item in groups['kafka_group'] -%}
                {% if loop.index > 1 %},{% endif %}{{ hostvars[item]['ansible_ssh_host'] }}:{{ kafka_port|int }}
              {%- endfor %}"
kafka_replicas: "{{ kafka_hosts.split(',')|length }}"
kafka_log_topic_replicas: "{{ kafka_replicas }}"
kafka_log_topic_partitions: 4

# zookeeper
zookeeper_hosts: "{% for item in groups['zookeeper_group'] -%}
                    {% if loop.index > 1 %},{% endif %}{{ hostvars[item]['ansible_ssh_host'] }}:{{ zookeeper_port|int }}
                  {%- endfor %}"

# monasca-log-api
monasca_log_api_hosts: "{% for item in groups['monasca_log_api_group'] -%}
                          {% if loop.index > 1 %},{% endif %}{{ hostvars[item]['ansible_ssh_host'] }}
                        {%- endfor %}"
monasca_log_api_nodes: "{{ monasca_log_api_hosts.split(',') }}"

# memcached
memcached_hosts: "{% for item in groups['memcached_group'] -%}
                    {% if loop.index > 1 %},{% endif %}{{ hostvars[item]['ansible_ssh_host'] }}:{{ memcached_port|int }}
                  {%- endfor %}"
memcached_nodes: "{{ memcached_hosts.split(',') }}"

# monasca-api
monasca_api_hosts: "{% for item in groups['monasca_api_group'] -%}
                          {% if loop.index > 1 %},{% endif %}{{ hostvars[item]['ansible_ssh_host'] }}
                        {%- endfor %}"
monasca_api_nodes: "{{ monasca_api_hosts.split(',') }}"

storm_hosts: "{% for item in groups['storm_group'] -%}
                {% if loop.index > 1 %},{% endif %}{{ hostvars[item]['ansible_ssh_host'] }}
              {%- endfor %}"
storm_nodes: "{{ storm_hosts.split(',') }}"

# keystone
keystone_host_full: "{{ keystone_host }}:{{ keystone_port }}"
keystone_auth_method: password

# database
mysql_schema_enabled: true
postgres_schema_enabled: false
database_backend: mariadb
orm_enabled: true
hibernate_support_enabled: true
database_host: "{{ monasca_host }}"
database_port: 3306
database_name: mon

database_users:
  notification: "{{ database_notification_password }}"
  monapi: "{{ database_monapi_password }}"
  thresh: "{{ database_thresh_password }}"

# mariadb
mariadb_host: "{{ monasca_host }}"

# monasca-api
api_log_dir: "{{ monasca_log_dir }}/api"

# monasca-log-api
monasca_log_api_log_dir: "{{ monasca_log_dir }}/log-api"
monasca_log_api_bind_host: 0.0.0.0

# monasca-agent
monasca_agent_log_dir: "{{ monasca_log_dir }}/agent"

# apache
apache_mirror: "{{ world_repo_url }}"
# elasticsearch
elasticsearch_version: "2.2.0"
elasticsearch_download: "{{ world_repo_url }}"
elasticsearch_log_dir: "{{ log_dir }}/elasticsearch"
elasticsearch_data_dir:
  - "{{ data_dir }}/elasticsearch"
elasticsearch_repo_dir: []

logstash_agent_download_url: "{{ world_repo_url }}"

# log persister
log_persister_host: 127.0.0.1
monasca_log_dir: "{{ log_dir }}/monasca"
monasca_log_persister_log_dir: "{{ monasca_log_dir }}/monasca-log-persister"
monasca_log_transformer_log_dir: "{{ monasca_log_dir }}/monasca-log-transformer"

defaultAuthorizedRoles: "user,domainuser,domainadmin,cmm-user"
agentAuthorizedRoles: "cmm-agent"

# kibana
kibana_log_dir: "{{ log_dir }}/kibana"

# log directories to be monitored
logstash_agent_log_dir: "{{ monasca_log_dir }}/monasca-log-agent"

# logstash
logstash_version: 2.2.0

# logrotate configuration
logrotate_scripts:
  - name: influxdb
    path: "{{ influxdb_log_dir }}/*.log"
    options:
      - daily
      - missingok
      - rotate 10
      - compress
      - delaycompress
      - notifempty
      - create 06400 {{ influx_db_user }} {{ influx_db_group }}
      - copytruncate
      - noemail
