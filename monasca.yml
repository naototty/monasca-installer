- name: Monasca Installation
  hosts: monasca
  sudo: yes
  vars:
    offline_mode: True
    # hosts
    monasca_host: 192.168.10.4
    offline_host: 192.168.10.4
    openstack_host: 192.168.10.5
    keystone_host: 192.168.10.5
    # urls
    zookeeper_hosts: "{{ monasca_host }}:2181"
    balls_repo_url: "http://{{ offline_host }}:8888"
    world_repo_url: "{{ balls_repo_url }}/world"
    kafka_apache_mirror: "{{ world_repo_url }}"
    influxdb_deb_src_url: "{{ world_repo_url }}"
    logstash_agent_download_url: "{{ world_repo_url }}"
    get_pip_download_url: "{{ world_repo_url }}"
    # monasca information
    monasca_group: monasca
    # influxDB
    influxdb:
      raft_port: 8086
    # zookeeper
    zookeeper_url: "{{ world_repo_url }}/zookeeper-{{ zookeeper_version }}.tar.gz"
    monasca_api_url: "http://{{ monasca_host }}:8080/v2.0"
    # influxDB
    influxdb_url: "http://{{ monasca_host }}:8086"
    influxdb_users:
      mon_api: password
      mon_persister: password
    # kafka
    kafka_events_partitions: 4
    kafka_metrics_partitions: 4
    kafka_replicas: 1
    kafka_hosts: "{{ monasca_host }}:9092"
    # keystone
    keystone_url: "http://{{ keystone_host }}:35357/v3"
    keystone_port: 5000
    keystone_host_full: "{{ keystone_host }}:{{ keystone_port }}"
    keystone_auth_method: password
    keystone_admin: csi-operator
    keystone_admin_password: password
    # database
    database_host: "{{ monasca_host }}"
    database_users:
      notification: password
      monapi: password
      thresh: password
    storm_worker_ports: [6701, 6702]
    zookeeper_hosts: "{{ monasca_host }}:2181"
    apache_mirror: "{{ world_repo_url }}"
    elasticsearch_version: "1.5.2"
    elasticsearch_download: "{{ world_repo_url }}"
    persister_tarball_base_url: "{{ world_repo_url }}"
    logstash_agent_download_url: "{{ world_repo_url }}"
    monasca_log_api_host: "{{ monasca_host }}"
    elasticsearch_url: "http://{{ monasca_host }}:9200"
    # Monasca-agent
    monasca_agent:
      user: csi-agent
      password: password
      project: csi
    monasca_agent_service: monitoring
    monasca_checks:
      host_alive:
        init_config:
          ssh_port: 22
          ssh_timeout: 0.5
          ping_timeout: 1
        instances:
          - name: openstack
            host_name: "{{ openstack_host }}"
            alive_test: ssh
    defaultAuthorizedRoles: "[user, domainuser, domainadmin, csi-user]"
    agentAuthorizedRoles: "[csi-agent]"
    monasca_user:
      user: csi-operator
      password: password
      project: csi
  pre_tasks:
    - include: tasks/set_up.yml
  roles:
    - {role: cli-credentials, is_openstack: false, tags: [cli]}
    - {role: zookeeper, tags: [zookeeper]}
    - {role: kafka, kafka_listen_address: "{{ monasca_host }}", tags: [kafka]}
    - {role: influxdb, tags: [influxdb]}
    - {role: postgresql-redhat,
       when: ansible_os_family == 'RedHat',
       postgresql_repo: "/opt/monasca/storage/balls/postgresql",
       postgresql_dir: "/opt/postgresql_91",
       postgresql_data_dir: "{{ postgresql_dir }}/data",
       postgresql_service_name: "postgres_fuji",
       postgresql_tar_filename: "/opt/monasca/storage/balls/world/postgresql/FJSVpgs91_64.tar.gz",
       postgres_install_from_tar: True,
       tags: [postgresql]}
    - {role: monasca-schema, database_admin_password: password, tags: [schema]}
    - {role: monasca-log-schema, tags: [elkstack]}
    - {role: monasca-api,
       api_region: useast,
       influxdb_user: mon_api,
       influxdb_password: password,
       database_user: monapi,
       database_password: password,
       monasca_api_tarball_base_url: "{{ world_repo_url }}",
       tags: [api]}
    - {role: monasca-log-api,
       api_region: useast,
       influxdb_user: mon_api,
       influxdb_password: password,
       database_user: monapi,
       database_password: password,
       monasca_log_api_tarball_base_url: "{{ world_repo_url }}",
       tags: [api]}
    - {role: monasca-persister,
       influxdb_user: mon_persister,
       influxdb_password: password,
       tags: [persister]}
    - {role: monasca-notification,
       database_user: notification,
       database_password: password,
       smtp_host: localhost,
       tags: [notification]}
    - {role: storm,
       nimbus_host: "{{ monasca_host }}",
       storm_nimbus_enabled: true,
       storm_supervisor_enabled: true,
       tags: [storm]}
    - {role: monasca-thresh,
       database_user: thresh,
       database_password: password,
       thresh_tarball_base_url: "{{ world_repo_url }}",
       tags: [thresh]}
    - {role: monasca-elkstack,
       elasticsearch_download: "{{ world_repo_url }}",
       logstash_download: "{{ world_repo_url }}",
       kibana_download: "{{ world_repo_url }}",
       tags: [elkstack]}
    - {role: monasca-agent, tags: [metric-agent, agents]}
    - {role: monasca-log-agent,
       project_name: csi,
       username: csi-agent,
       password: password,
       domain_id: default,
       log_files: ['/var/log/monasca/agent/*.log',
                   '/var/log/monasca/api/*.log',
                   '/var/log/monasca/log-api/*.log',
                   '/var/log/monasca/monasca-log-agent/*.log',
                   '/var/log/monasca/notification/*.log',
                   '/var/log/monasca/persister/*.log'],
       tags: [log-agent, agents]}
  post_tasks:
    - include: tasks/clean_up.yml
